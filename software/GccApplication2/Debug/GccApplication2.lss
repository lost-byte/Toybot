
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000402  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003ae  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000402  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000434  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000470  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001172  00000000  00000000  000004e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007c9  00000000  00000000  0000165a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000782  00000000  00000000  00001e23  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ec  00000000  00000000  000025a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003fd  00000000  00000000  00002694  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000069c  00000000  00000000  00002a91  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  0000312d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
   8:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
   c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  10:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  14:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  18:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  1c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  20:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  24:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  28:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  2c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  30:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  34:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  38:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  3c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  40:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  44:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  48:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  4c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  50:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  54:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  58:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  5c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  60:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  64:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  68:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>
  6c:	0c 94 42 00 	jmp	0x84	; 0x84 <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61
  7c:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <main>
  80:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <_exit>

00000084 <__bad_interrupt>:
  84:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000088 <LCDBusOut>:
void LCDWaitBusy(){
	unsigned char status = 0;
	do {
		status = LCDStatus();
	} while (status&0x80);
}
  88:	d5 9a       	sbi	0x1a, 5	; 26
  8a:	d4 9a       	sbi	0x1a, 4	; 26
  8c:	d3 9a       	sbi	0x1a, 3	; 26
  8e:	d2 9a       	sbi	0x1a, 2	; 26
  90:	bc 9a       	sbi	0x17, 4	; 23
  92:	bb 9a       	sbi	0x17, 3	; 23
  94:	ba 9a       	sbi	0x17, 2	; 23
  96:	b9 9a       	sbi	0x17, 1	; 23
  98:	dd 98       	cbi	0x1b, 5	; 27
  9a:	dc 98       	cbi	0x1b, 4	; 27
  9c:	db 98       	cbi	0x1b, 3	; 27
  9e:	da 98       	cbi	0x1b, 2	; 27
  a0:	c4 98       	cbi	0x18, 4	; 24
  a2:	c3 98       	cbi	0x18, 3	; 24
  a4:	c2 98       	cbi	0x18, 2	; 24
  a6:	c1 98       	cbi	0x18, 1	; 24
  a8:	08 95       	ret

000000aa <LCDBusIn>:
  aa:	d5 98       	cbi	0x1a, 5	; 26
  ac:	d4 98       	cbi	0x1a, 4	; 26
  ae:	d3 98       	cbi	0x1a, 3	; 26
  b0:	d2 98       	cbi	0x1a, 2	; 26
  b2:	bc 98       	cbi	0x17, 4	; 23
  b4:	bb 98       	cbi	0x17, 3	; 23
  b6:	ba 98       	cbi	0x17, 2	; 23
  b8:	b9 98       	cbi	0x17, 1	; 23
  ba:	dd 98       	cbi	0x1b, 5	; 27
  bc:	dc 98       	cbi	0x1b, 4	; 27
  be:	db 98       	cbi	0x1b, 3	; 27
  c0:	da 98       	cbi	0x1b, 2	; 27
  c2:	c4 98       	cbi	0x18, 4	; 24
  c4:	c3 98       	cbi	0x18, 3	; 24
  c6:	c2 98       	cbi	0x18, 2	; 24
  c8:	c1 98       	cbi	0x18, 1	; 24
  ca:	08 95       	ret

000000cc <LCDBusW>:
  cc:	80 ff       	sbrs	r24, 0
  ce:	02 c0       	rjmp	.+4      	; 0xd4 <LCDBusW+0x8>
  d0:	dd 9a       	sbi	0x1b, 5	; 27
  d2:	01 c0       	rjmp	.+2      	; 0xd6 <LCDBusW+0xa>
  d4:	dd 98       	cbi	0x1b, 5	; 27
  d6:	81 ff       	sbrs	r24, 1
  d8:	02 c0       	rjmp	.+4      	; 0xde <LCDBusW+0x12>
  da:	dc 9a       	sbi	0x1b, 4	; 27
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <LCDBusW+0x14>
  de:	dc 98       	cbi	0x1b, 4	; 27
  e0:	82 ff       	sbrs	r24, 2
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <LCDBusW+0x1c>
  e4:	db 9a       	sbi	0x1b, 3	; 27
  e6:	01 c0       	rjmp	.+2      	; 0xea <LCDBusW+0x1e>
  e8:	db 98       	cbi	0x1b, 3	; 27
  ea:	83 ff       	sbrs	r24, 3
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <LCDBusW+0x26>
  ee:	da 9a       	sbi	0x1b, 2	; 27
  f0:	01 c0       	rjmp	.+2      	; 0xf4 <LCDBusW+0x28>
  f2:	da 98       	cbi	0x1b, 2	; 27
  f4:	84 ff       	sbrs	r24, 4
  f6:	02 c0       	rjmp	.+4      	; 0xfc <LCDBusW+0x30>
  f8:	c4 9a       	sbi	0x18, 4	; 24
  fa:	01 c0       	rjmp	.+2      	; 0xfe <LCDBusW+0x32>
  fc:	c4 98       	cbi	0x18, 4	; 24
  fe:	85 ff       	sbrs	r24, 5
 100:	02 c0       	rjmp	.+4      	; 0x106 <LCDBusW+0x3a>
 102:	c3 9a       	sbi	0x18, 3	; 24
 104:	01 c0       	rjmp	.+2      	; 0x108 <LCDBusW+0x3c>
 106:	c3 98       	cbi	0x18, 3	; 24
 108:	86 ff       	sbrs	r24, 6
 10a:	02 c0       	rjmp	.+4      	; 0x110 <LCDBusW+0x44>
 10c:	c2 9a       	sbi	0x18, 2	; 24
 10e:	01 c0       	rjmp	.+2      	; 0x112 <LCDBusW+0x46>
 110:	c2 98       	cbi	0x18, 2	; 24
 112:	88 23       	and	r24, r24
 114:	14 f4       	brge	.+4      	; 0x11a <LCDBusW+0x4e>
 116:	c1 9a       	sbi	0x18, 1	; 24
 118:	08 95       	ret
 11a:	c1 98       	cbi	0x18, 1	; 24
 11c:	08 95       	ret

0000011e <LCDBusR>:
 11e:	86 b3       	in	r24, 0x16	; 22
 120:	96 b3       	in	r25, 0x16	; 22
 122:	92 fb       	bst	r25, 2
 124:	99 27       	eor	r25, r25
 126:	90 f9       	bld	r25, 0
 128:	82 70       	andi	r24, 0x02	; 2
 12a:	89 2b       	or	r24, r25
 12c:	96 b3       	in	r25, 0x16	; 22
 12e:	93 fb       	bst	r25, 3
 130:	99 27       	eor	r25, r25
 132:	90 f9       	bld	r25, 0
 134:	88 0f       	add	r24, r24
 136:	89 2b       	or	r24, r25
 138:	96 b3       	in	r25, 0x16	; 22
 13a:	92 95       	swap	r25
 13c:	91 70       	andi	r25, 0x01	; 1
 13e:	88 0f       	add	r24, r24
 140:	89 2b       	or	r24, r25
 142:	99 b3       	in	r25, 0x19	; 25
 144:	92 fb       	bst	r25, 2
 146:	99 27       	eor	r25, r25
 148:	90 f9       	bld	r25, 0
 14a:	88 0f       	add	r24, r24
 14c:	89 2b       	or	r24, r25
 14e:	99 b3       	in	r25, 0x19	; 25
 150:	93 fb       	bst	r25, 3
 152:	99 27       	eor	r25, r25
 154:	90 f9       	bld	r25, 0
 156:	88 0f       	add	r24, r24
 158:	89 2b       	or	r24, r25
 15a:	99 b3       	in	r25, 0x19	; 25
 15c:	92 95       	swap	r25
 15e:	91 70       	andi	r25, 0x01	; 1
 160:	88 0f       	add	r24, r24
 162:	89 2b       	or	r24, r25
 164:	99 b3       	in	r25, 0x19	; 25
 166:	95 fb       	bst	r25, 5
 168:	99 27       	eor	r25, r25
 16a:	90 f9       	bld	r25, 0
 16c:	88 0f       	add	r24, r24
 16e:	89 2b       	or	r24, r25
 170:	08 95       	ret

00000172 <LCDCommonR>:
 172:	cf 93       	push	r28
 174:	0e 94 55 00 	call	0xaa	; 0xaa <LCDBusIn>
 178:	d8 9a       	sbi	0x1b, 0	; 27
 17a:	8a e1       	ldi	r24, 0x1A	; 26
 17c:	8a 95       	dec	r24
 17e:	f1 f7       	brne	.-4      	; 0x17c <LCDCommonR+0xa>
 180:	00 c0       	rjmp	.+0      	; 0x182 <LCDCommonR+0x10>
 182:	d9 98       	cbi	0x1b, 1	; 27
 184:	8a e1       	ldi	r24, 0x1A	; 26
 186:	8a 95       	dec	r24
 188:	f1 f7       	brne	.-4      	; 0x186 <LCDCommonR+0x14>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <LCDCommonR+0x1a>
 18c:	0e 94 8f 00 	call	0x11e	; 0x11e <LCDBusR>
 190:	c8 2f       	mov	r28, r24
 192:	8a e1       	ldi	r24, 0x1A	; 26
 194:	8a 95       	dec	r24
 196:	f1 f7       	brne	.-4      	; 0x194 <LCDCommonR+0x22>
 198:	00 c0       	rjmp	.+0      	; 0x19a <LCDCommonR+0x28>
 19a:	d9 9a       	sbi	0x1b, 1	; 27
 19c:	d8 98       	cbi	0x1b, 0	; 27
 19e:	0e 94 44 00 	call	0x88	; 0x88 <LCDBusOut>
 1a2:	8c 2f       	mov	r24, r28
 1a4:	cf 91       	pop	r28
 1a6:	08 95       	ret

000001a8 <LCDCommonW>:
 1a8:	d8 98       	cbi	0x1b, 0	; 27
 1aa:	9a e1       	ldi	r25, 0x1A	; 26
 1ac:	9a 95       	dec	r25
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <LCDCommonW+0x4>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <LCDCommonW+0xa>
 1b2:	d9 98       	cbi	0x1b, 1	; 27
 1b4:	9a e1       	ldi	r25, 0x1A	; 26
 1b6:	9a 95       	dec	r25
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCDCommonW+0xe>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCDCommonW+0x14>
 1bc:	0e 94 66 00 	call	0xcc	; 0xcc <LCDBusW>
 1c0:	85 e8       	ldi	r24, 0x85	; 133
 1c2:	8a 95       	dec	r24
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <LCDCommonW+0x1a>
 1c6:	00 00       	nop
 1c8:	d9 9a       	sbi	0x1b, 1	; 27
 1ca:	8f e1       	ldi	r24, 0x1F	; 31
 1cc:	9e e4       	ldi	r25, 0x4E	; 78
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <LCDCommonW+0x26>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <LCDCommonW+0x2c>
 1d4:	00 00       	nop
 1d6:	08 95       	ret

000001d8 <LCDCommand>:
 1d8:	c0 98       	cbi	0x18, 0	; 24
 1da:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 1de:	c0 9a       	sbi	0x18, 0	; 24
 1e0:	08 95       	ret

000001e2 <LCDDataR>:
 1e2:	c0 9a       	sbi	0x18, 0	; 24
 1e4:	0e 94 b9 00 	call	0x172	; 0x172 <LCDCommonR>
 1e8:	08 95       	ret

000001ea <LCDStatus>:
 1ea:	c0 98       	cbi	0x18, 0	; 24
 1ec:	0e 94 b9 00 	call	0x172	; 0x172 <LCDCommonR>
 1f0:	08 95       	ret

000001f2 <main>:



int main(void)
{
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	00 d0       	rcall	.+0      	; 0x1f8 <main+0x6>
 1f8:	cd b7       	in	r28, 0x3d	; 61
 1fa:	de b7       	in	r29, 0x3e	; 62
	PIN_OUT(LED2);
 1fc:	30 9a       	sbi	0x06, 0	; 6
	PIN_OUT(LED1)
 1fe:	31 9a       	sbi	0x06, 1	; 6

	LCDBusOut();
 200:	0e 94 44 00 	call	0x88	; 0x88 <LCDBusOut>
	
	PIN_OUT(LCD_CS);
 204:	d7 9a       	sbi	0x1a, 7	; 26
	PIN_OUT(LCD_A0);
 206:	b8 9a       	sbi	0x17, 0	; 23
	PIN_OUT(LCD_RESET);
 208:	d6 9a       	sbi	0x1a, 6	; 26
	PIN_OUT(LCD_E);
 20a:	d1 9a       	sbi	0x1a, 1	; 26
	PIN_OUT(LCD_RW);
 20c:	d0 9a       	sbi	0x1a, 0	; 26

	PIN_OUT(LCD_LED);
 20e:	8c 9a       	sbi	0x11, 4	; 17
	SET(LCD_E);
 210:	d9 9a       	sbi	0x1b, 1	; 27
	SET(LCD_LED);
 212:	94 9a       	sbi	0x12, 4	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 214:	8f e1       	ldi	r24, 0x1F	; 31
 216:	9e e4       	ldi	r25, 0x4E	; 78
 218:	01 97       	sbiw	r24, 0x01	; 1
 21a:	f1 f7       	brne	.-4      	; 0x218 <main+0x26>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <main+0x2c>
 21e:	00 00       	nop

	_delay_ms(10);
	SET(LCD_RESET);
 220:	de 9a       	sbi	0x1b, 6	; 27
 222:	8f e1       	ldi	r24, 0x1F	; 31
 224:	9e e4       	ldi	r25, 0x4E	; 78
 226:	01 97       	sbiw	r24, 0x01	; 1
 228:	f1 f7       	brne	.-4      	; 0x226 <main+0x34>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <main+0x3a>
 22c:	00 00       	nop
	_delay_ms(10);
	//CLR(LCD_RESET);
	//_delay_ms(100);

	SET(LCD_CS);
 22e:	df 9a       	sbi	0x1b, 7	; 27
	LCDCommand(COM_CLEAR_RMW);
 230:	8e ee       	ldi	r24, 0xEE	; 238
 232:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_STATIC_DRIVE_OFF);
 236:	84 ea       	ldi	r24, 0xA4	; 164
 238:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_DUTY_SELECT_ON);
 23c:	89 ea       	ldi	r24, 0xA9	; 169
 23e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_DISPLAY_ON);
 242:	8f ea       	ldi	r24, 0xAF	; 175
 244:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_ADC_SELECT_OFF);
 248:	80 ea       	ldi	r24, 0xA0	; 160
 24a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_RESET);
 24e:	82 ee       	ldi	r24, 0xE2	; 226
 250:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_START_LINE(0));
 254:	80 e0       	ldi	r24, 0x00	; 0
 256:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>


	LCDCommand(PAGE0);
 25a:	88 eb       	ldi	r24, 0xB8	; 184
 25c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDDataR();
 260:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCDDataR>
	LCDCommand(0);
 264:	80 e0       	ldi	r24, 0x00	; 0
 266:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDDataR();
 26a:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCDDataR>
}

void LCDData(unsigned char arg){
	//LCDWaitBusy();
	
	LCDCommonW(arg);
 26e:	81 eb       	ldi	r24, 0xB1	; 177
 270:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 274:	82 e0       	ldi	r24, 0x02	; 2
 276:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 27a:	84 e0       	ldi	r24, 0x04	; 4
 27c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 280:	88 e0       	ldi	r24, 0x08	; 8
 282:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 286:	80 e1       	ldi	r24, 0x10	; 16
 288:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 28c:	80 e2       	ldi	r24, 0x20	; 32
 28e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 292:	80 e4       	ldi	r24, 0x40	; 64
 294:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 298:	80 e8       	ldi	r24, 0x80	; 128
 29a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
	LCDData(0x20);
	LCDData(0x40);
	LCDData(0x80);
	
	
	CLR(LCD_CS);
 29e:	df 98       	cbi	0x1b, 7	; 27
	LCDCommand(COM_CLEAR_RMW);
 2a0:	8e ee       	ldi	r24, 0xEE	; 238
 2a2:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_STATIC_DRIVE_OFF);
 2a6:	84 ea       	ldi	r24, 0xA4	; 164
 2a8:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_DUTY_SELECT_ON);
 2ac:	89 ea       	ldi	r24, 0xA9	; 169
 2ae:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_DISPLAY_ON);
 2b2:	8f ea       	ldi	r24, 0xAF	; 175
 2b4:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_ADC_SELECT_OFF);
 2b8:	80 ea       	ldi	r24, 0xA0	; 160
 2ba:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_RESET);
 2be:	82 ee       	ldi	r24, 0xE2	; 226
 2c0:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDCommand(COM_START_LINE(0));
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	
	LCDCommand(PAGE2);
 2ca:	8a eb       	ldi	r24, 0xBA	; 186
 2cc:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDDataR();
 2d0:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCDDataR>
	LCDCommand(0x0a);
 2d4:	8a e0       	ldi	r24, 0x0A	; 10
 2d6:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDDataR();
 2da:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCDDataR>
}

void LCDData(unsigned char arg){
	//LCDWaitBusy();
	
	LCDCommonW(arg);
 2de:	8a ea       	ldi	r24, 0xAA	; 170
 2e0:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 2e4:	85 e5       	ldi	r24, 0x55	; 85
 2e6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 2ea:	8a ea       	ldi	r24, 0xAA	; 170
 2ec:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 2f0:	85 e5       	ldi	r24, 0x55	; 85
 2f2:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 2f6:	8a ea       	ldi	r24, 0xAA	; 170
 2f8:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 2fc:	85 e5       	ldi	r24, 0x55	; 85
 2fe:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 302:	8a ea       	ldi	r24, 0xAA	; 170
 304:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 308:	85 e5       	ldi	r24, 0x55	; 85
 30a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
	LCDData(0xAA);
	LCDData(0x55);
	LCDData(0xAA);
	LCDData(0x55);
	
	SET(LCD_CS);
 30e:	df 9a       	sbi	0x1b, 7	; 27
	volatile unsigned char status = LCDStatus();
 310:	0e 94 f5 00 	call	0x1ea	; 0x1ea <LCDStatus>
 314:	89 83       	std	Y+1, r24	; 0x01

	LCDCommand(PAGE0);
 316:	88 eb       	ldi	r24, 0xB8	; 184
 318:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDDataR();
 31c:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCDDataR>
	LCDCommand(1);
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
	LCDDataR();
 326:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCDDataR>

	volatile unsigned char test = LCDDataR();
 32a:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCDDataR>
 32e:	8a 83       	std	Y+2, r24	; 0x02
		_delay_ms(50);
		SET(LED2);
		CLR(LED1);
		*/
		int addr;
		LCDCommand(PAGE0);
 330:	88 eb       	ldi	r24, 0xB8	; 184
 332:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
		LCDDataR();
 336:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCDDataR>
		LCDCommand(1);
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
 340:	10 e0       	ldi	r17, 0x00	; 0
}

void LCDData(unsigned char arg){
	//LCDWaitBusy();
	
	LCDCommonW(arg);
 342:	81 2f       	mov	r24, r17
 344:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 348:	1f 5f       	subi	r17, 0xFF	; 255
		*/
		int addr;
		LCDCommand(PAGE0);
		LCDDataR();
		LCDCommand(1);
		for (addr=0;addr<80;addr++){
 34a:	10 35       	cpi	r17, 0x50	; 80
 34c:	d1 f7       	brne	.-12     	; 0x342 <main+0x150>
			LCDData(addr);
		}
		LCDCommand(PAGE1);
 34e:	89 eb       	ldi	r24, 0xB9	; 185
 350:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
		LCDDataR();
 354:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCDDataR>
		LCDCommand(1);
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
 35e:	10 e0       	ldi	r17, 0x00	; 0
}

void LCDData(unsigned char arg){
	//LCDWaitBusy();
	
	LCDCommonW(arg);
 360:	81 2f       	mov	r24, r17
 362:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 366:	1f 5f       	subi	r17, 0xFF	; 255
			LCDData(addr);
		}
		LCDCommand(PAGE1);
		LCDDataR();
		LCDCommand(1);
		for (addr=0;addr<80;addr++){
 368:	10 35       	cpi	r17, 0x50	; 80
 36a:	d1 f7       	brne	.-12     	; 0x360 <main+0x16e>
			LCDData(addr);
		}
		LCDCommand(PAGE2);
 36c:	8a eb       	ldi	r24, 0xBA	; 186
 36e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
		LCDDataR();
 372:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCDDataR>
		LCDCommand(1);
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
 37c:	10 e0       	ldi	r17, 0x00	; 0
}

void LCDData(unsigned char arg){
	//LCDWaitBusy();
	
	LCDCommonW(arg);
 37e:	81 2f       	mov	r24, r17
 380:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 384:	1f 5f       	subi	r17, 0xFF	; 255
			LCDData(addr);
		}
		LCDCommand(PAGE2);
		LCDDataR();
		LCDCommand(1);
		for (addr=0;addr<80;addr++){
 386:	10 35       	cpi	r17, 0x50	; 80
 388:	d1 f7       	brne	.-12     	; 0x37e <main+0x18c>
			LCDData(addr);
		}
		LCDCommand(PAGE3);
 38a:	8b eb       	ldi	r24, 0xBB	; 187
 38c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
		LCDDataR();
 390:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCDDataR>
		LCDCommand(1);
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <LCDCommand>
 39a:	10 e0       	ldi	r17, 0x00	; 0
}

void LCDData(unsigned char arg){
	//LCDWaitBusy();
	
	LCDCommonW(arg);
 39c:	81 2f       	mov	r24, r17
 39e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <LCDCommonW>
 3a2:	1f 5f       	subi	r17, 0xFF	; 255
			LCDData(addr);
		}
		LCDCommand(PAGE3);
		LCDDataR();
		LCDCommand(1);
		for (addr=0;addr<80;addr++){
 3a4:	10 35       	cpi	r17, 0x50	; 80
 3a6:	d1 f7       	brne	.-12     	; 0x39c <main+0x1aa>
 3a8:	c3 cf       	rjmp	.-122    	; 0x330 <main+0x13e>

000003aa <_exit>:
 3aa:	f8 94       	cli

000003ac <__stop_program>:
 3ac:	ff cf       	rjmp	.-2      	; 0x3ac <__stop_program>
